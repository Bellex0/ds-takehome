{"ast":null,"code":"var _jsxFileName = \"/Users/belle/Desktop/data-society/data-society-take-home/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [latitude, setLatitude] = useState('');\n  const [longitude, setLongitude] = useState('');\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [startTime, setStartTime] = useState({\n    hour: '',\n    period: ''\n  });\n  const [endTime, setEndTime] = useState({\n    hour: '',\n    period: ''\n  });\n  const [weatherData, setWeatherData] = useState(null);\n  const [filteredData, setFilteredData] = useState(null);\n  const [error, setError] = useState('');\n\n  // format date to YYYY-MM-DD\n  const formatDate = dateStr => {\n    const date = new Date(dateStr);\n    return date.toISOString().split('T')[0];\n  };\n\n  // convert time to 00:00:00\n  const convertTimeTo24HourFormat = timeObj => {\n    let {\n      hour,\n      period\n    } = timeObj;\n    hour = parseInt(hour);\n    if (period === 'PM' && hour !== 12) {\n      hour += 12;\n    } else if (period === 'AM' && hour === 12) {\n      hour = 0;\n    }\n\n    // return `${hour.toString().padStart(2, '0')}:00:00-05:00`;\n  };\n\n  // Function to generate dates for the next seven days\n  const daysOfWeek = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n  const nextSevenDays = Array.from({\n    length: 7\n  }, (_, index) => {\n    const today = new Date();\n    const date = new Date(today);\n    date.setDate(date.getDate() + index);\n    const dayOfWeek = daysOfWeek[date.getDay()];\n    const month = date.toLocaleString('en-US', {\n      month: 'short'\n    });\n    const day = date.getDate();\n    const year = date.getFullYear();\n    return `${dayOfWeek} ${month} ${day}, ${year}`;\n  });\n\n  // Arrays for hours and AM/PM\n  const hours = Array.from({\n    length: 12\n  }, (_, i) => i + 1);\n  const periods = ['AM', 'PM'];\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const lat = parseFloat(latitude);\n    const long = parseFloat(longitude);\n    if (!latitude || !longitude) {\n      setError('Please enter latitude and longitude');\n      return;\n    }\n    setError('');\n    const url = `https://api.weather.gov/points/${lat},${long}`;\n    try {\n      // 1ST API CALL TO GET HOURLY FORECAST ENDPOINT\n      const response = await fetch(url);\n      console.log(\"response\", response);\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(`Error ${errorData.status}: ${errorData.detail}` || `Error: ${response.status}`);\n      }\n      const data = await response.json();\n      const forecastHourlyURL = data.properties.forecastHourly;\n\n      // 2ND API CALL TO GET HOURLY FORECAST\n      const forecastResponse = await fetch(forecastHourlyURL);\n      console.log(\"forecast\", forecastResponse);\n      if (!forecastResponse.ok) {\n        const errorData = await forecastResponse.json();\n        throw new Error(`Error ${errorData.status}: ${errorData.detail}` || `Error: ${forecastResponse.status}`);\n      }\n      const forecastData = await forecastResponse.json();\n      setWeatherData(forecastData);\n\n      // convert user input dates and times to match API data's startTime, endTime values\n      const startDateTime = `${formatDate(startDate)}T${convertTimeTo24HourFormat(startTime)}`;\n      const endDateTime = `${formatDate(endDate)}T${convertTimeTo24HourFormat(endTime)}`;\n      console.log(endDateTime);\n\n      // filter data based on start date/time and end date/time\n      const filteredPeriods = forecastData.properties.periods.filter(period => {\n        const periodStartTime = period.startTime;\n        return periodStartTime >= startDateTime && periodStartTime < endDateTime;\n      });\n      setFilteredData(filteredPeriods);\n    } catch (error) {\n      console.log(error);\n      setError(error.message);\n      setWeatherData(null);\n    }\n  };\n  console.log(filteredData);\n  console.log(\"orig\", startTime);\n  console.log(convertTimeTo24HourFormat(endTime));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"How's the weather? \\uD83C\\uDF21\\uFE0F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Enter location coordinates\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Latitude:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: latitude,\n            onChange: e => setLatitude(e.target.value),\n            placeholder: \"e.g., 36.1716\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Longitude:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: longitude,\n            onChange: e => setLongitude(e.target.value),\n            placeholder: \"e.g., -115.1391\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"startDate\",\n        children: \"Start Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"startDate\",\n        value: startDate,\n        onChange: e => setStartDate(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          children: \"Select day\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 7\n        }, this), nextSevenDays.map((date, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: date,\n          children: date\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"endDate\",\n        children: \"End Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"endDate\",\n        value: endDate,\n        onChange: e => setEndDate(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          children: \"Select day\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 7\n        }, this), nextSevenDays.map((date, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: date,\n          children: date\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"startTimeHour\",\n        children: \"Start Time:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"startTimeHour\",\n        value: startTime.hour,\n        onChange: e => setStartTime({\n          ...startTime,\n          hour: e.target.value\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          children: \"Select hour\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 9\n        }, this), hours.map((hour, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: hour,\n          children: hour\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"startTimePeriod\",\n        value: startTime.period,\n        onChange: e => setStartTime({\n          ...startTime,\n          period: e.target.value\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          children: \"Select period\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 9\n        }, this), periods.map((period, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: period,\n          children: period\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 168,\n          columnNumber: 11\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"endTimeHour\",\n        children: \"End Time:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"endTimeHour\",\n        value: endTime.hour,\n        onChange: e => setEndTime({\n          ...endTime,\n          hour: e.target.value\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          children: \"Select hour\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 9\n        }, this), hours.map((hour, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: hour,\n          children: hour\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 11\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"endTimePeriod\",\n        value: endTime.period,\n        onChange: e => setEndTime({\n          ...endTime,\n          period: e.target.value\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          children: \"Select period\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 9\n        }, this), periods.map((period, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: period,\n          children: period\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 17\n    }, this), weatherData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Weather Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }, this), filteredData.map((period, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"weather-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"Start Time:  \", new Date(period.startTime).toLocaleString('en-US', {\n            weekday: 'short',\n            month: 'short',\n            day: 'numeric',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: true\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: [\"End Time: \", new Date(period.endTime).toLocaleString('en-US', {\n            weekday: 'short',\n            month: 'short',\n            day: 'numeric',\n            year: 'numeric',\n            hour: 'numeric',\n            minute: 'numeric',\n            hour12: true\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Temperature: \", period.temperature, \" \\xB0\", period.temperatureUnit]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: period.shortForecast\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Precipitation: \", period.probabilityOfPrecipitation.value, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 197,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"o8fd18GkNoMsf9VLf0jhLb8bXqc=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","latitude","setLatitude","longitude","setLongitude","startDate","setStartDate","endDate","setEndDate","startTime","setStartTime","hour","period","endTime","setEndTime","weatherData","setWeatherData","filteredData","setFilteredData","error","setError","formatDate","dateStr","date","Date","toISOString","split","convertTimeTo24HourFormat","timeObj","parseInt","daysOfWeek","nextSevenDays","Array","from","length","_","index","today","setDate","getDate","dayOfWeek","getDay","month","toLocaleString","day","year","getFullYear","hours","i","periods","handleSubmit","e","preventDefault","lat","parseFloat","long","url","response","fetch","console","log","ok","errorData","json","Error","status","detail","data","forecastHourlyURL","properties","forecastHourly","forecastResponse","forecastData","startDateTime","endDateTime","filteredPeriods","filter","periodStartTime","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","htmlFor","id","disabled","map","style","color","weekday","minute","hour12","temperature","temperatureUnit","shortForecast","probabilityOfPrecipitation","_c","$RefreshReg$"],"sources":["/Users/belle/Desktop/data-society/data-society-take-home/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [latitude, setLatitude] = useState('');\n  const [longitude, setLongitude] = useState('');\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [startTime, setStartTime] = useState({ hour: '', period: '' });\n  const [endTime, setEndTime] = useState({ hour: '', period: '' });\n  const [weatherData, setWeatherData] = useState(null);\n  const [filteredData, setFilteredData] = useState(null);\n  const [error, setError] = useState('');\n\n  // format date to YYYY-MM-DD\n  const formatDate = (dateStr) => {\n    const date = new Date(dateStr);\n    return date.toISOString().split('T')[0];\n  };\n\n  // convert time to 00:00:00\n  const convertTimeTo24HourFormat = (timeObj) => {\n    let { hour, period } = timeObj;\n    hour = parseInt(hour);\n  \n    if (period === 'PM' && hour !== 12) {\n      hour += 12;\n    } else if (period === 'AM' && hour === 12) {\n      hour = 0;\n    }\n  \n    // return `${hour.toString().padStart(2, '0')}:00:00-05:00`;\n  };\n  \n\n   // Function to generate dates for the next seven days\n   const daysOfWeek = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n   const nextSevenDays = Array.from({ length: 7 }, (_, index) => {\n    const today = new Date();\n     const date = new Date(today);\n     date.setDate(date.getDate() + index);\n     const dayOfWeek = daysOfWeek[date.getDay()];\n     const month = date.toLocaleString('en-US', { month: 'short' });\n     const day = date.getDate();\n     const year = date.getFullYear();\n     return `${dayOfWeek} ${month} ${day}, ${year}`;\n   });\n\n     // Arrays for hours and AM/PM\n    const hours = Array.from({ length: 12 }, (_, i) => i + 1);\n    const periods = ['AM', 'PM'];\n\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const lat = parseFloat(latitude);\n    const long = parseFloat(longitude);\n\n    if (!latitude || !longitude) {\n      setError('Please enter latitude and longitude');\n      return;\n    }\n\n    setError('');\n\n    const url = `https://api.weather.gov/points/${lat},${long}`;\n\n    try {\n      // 1ST API CALL TO GET HOURLY FORECAST ENDPOINT\n      const response = await fetch(url);\n      console.log(\"response\", response)\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(`Error ${errorData.status}: ${errorData.detail}` || `Error: ${response.status}`);\n      }\n      const data = await response.json();\n      const forecastHourlyURL = data.properties.forecastHourly;\n\n      // 2ND API CALL TO GET HOURLY FORECAST\n      const forecastResponse = await fetch(forecastHourlyURL)\n      console.log(\"forecast\", forecastResponse)\n      if (!forecastResponse.ok) {\n        const errorData = await forecastResponse.json();\n        throw new Error(`Error ${errorData.status}: ${errorData.detail}` || `Error: ${forecastResponse.status}`);\n      }\n\n      const forecastData = await forecastResponse.json();\n      setWeatherData(forecastData);\n\n     // convert user input dates and times to match API data's startTime, endTime values\n     const startDateTime = `${formatDate(startDate)}T${convertTimeTo24HourFormat(startTime)}`;\n     const endDateTime = `${formatDate(endDate)}T${convertTimeTo24HourFormat(endTime)}`;\n\n     console.log(endDateTime)\n\n     // filter data based on start date/time and end date/time\n     const filteredPeriods = forecastData.properties.periods.filter(period => {\n        const periodStartTime = period.startTime;\n        return (periodStartTime >= startDateTime && periodStartTime < endDateTime);\n     });\n      \n     setFilteredData(filteredPeriods);\n      \n    } catch (error) {\n      console.log(error)\n      setError(error.message);\n      setWeatherData(null);\n    }\n  };\n\n  console.log(filteredData)\n  console.log(\"orig\", startTime)\n  console.log(convertTimeTo24HourFormat(endTime))\n\n\n  return (\n    <div className=\"App\">\n      <h1>How's the weather? 🌡️</h1>\n      <h3>Enter location coordinates</h3>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label>\n            Latitude:\n            <input\n              type=\"text\"\n              value={latitude}\n              onChange={(e) => setLatitude(e.target.value)}\n              placeholder=\"e.g., 36.1716\"\n            />\n          </label>\n        </div>\n        <div>\n          <label>\n            Longitude:\n            <input\n              type=\"text\"\n              value={longitude}\n              onChange={(e) => setLongitude(e.target.value)}\n              placeholder=\"e.g., -115.1391\"\n            />\n          </label>\n        </div>\n        <label htmlFor=\"startDate\">Start Date:</label>\n      <select id=\"startDate\" value={startDate} onChange={(e) => setStartDate(e.target.value)}>\n      <option value=\"\" disabled>Select day</option>\n        {nextSevenDays.map((date, index) => (\n          <option key={index} value={date}>{date}</option>\n        ))}\n      </select>\n      <label htmlFor=\"endDate\">End Date:</label>\n      <select id=\"endDate\" value={endDate} onChange={(e) => setEndDate(e.target.value)}>\n      <option value=\"\" disabled>Select day</option>\n        {nextSevenDays.map((date, index) => (\n          <option key={index} value={date}>{date}</option>\n        ))}\n      </select>\n      <label htmlFor=\"startTimeHour\">Start Time:</label>\n      <select id=\"startTimeHour\" value={startTime.hour} onChange={(e) => setStartTime({ ...startTime, hour: e.target.value })}>\n        <option value=\"\" disabled>Select hour</option>\n        {hours.map((hour, index) => (\n          <option key={index} value={hour}>{hour}</option>\n        ))}\n      </select>\n      <select id=\"startTimePeriod\" value={startTime.period} onChange={(e) => setStartTime({ ...startTime, period: e.target.value })}>\n        <option value=\"\" disabled>Select period</option>\n        {periods.map((period, index) => (\n          <option key={index} value={period}>{period}</option>\n        ))}\n      </select>\n\n      <label htmlFor=\"endTimeHour\">End Time:</label>\n      <select id=\"endTimeHour\" value={endTime.hour} onChange={(e) => setEndTime({ ...endTime, hour: e.target.value })}>\n        <option value=\"\" disabled>Select hour</option>\n        {hours.map((hour, index) => (\n          <option key={index} value={hour}>{hour}</option>\n        ))}\n      </select>\n      <select id=\"endTimePeriod\" value={endTime.period} onChange={(e) => setEndTime({ ...endTime, period: e.target.value })}>\n        <option value=\"\" disabled>Select period</option>\n        {periods.map((period, index) => (\n          <option key={index} value={period}>{period}</option>\n        ))}\n      </select>\n        <button type=\"submit\">Submit</button>\n      </form>\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n      {weatherData && (\n        <div>\n          <h2>Weather Data</h2>\n          {filteredData.map((period, index) => (\n            <div key={index} className='weather-container'>\n              <h4>Start Time:  {new Date(period.startTime).toLocaleString('en-US', { weekday: 'short', month: 'short', day: 'numeric', year: 'numeric', hour: 'numeric', minute: 'numeric', hour12: true })}</h4>\n              <h4>End Time: {new Date(period.endTime).toLocaleString('en-US', { weekday: 'short', month: 'short', day: 'numeric', year: 'numeric', hour: 'numeric', minute: 'numeric', hour12: true })}</h4>\n              <p>Temperature: {period.temperature} &deg;{period.temperatureUnit}</p>\n              <p>{period.shortForecast}</p>\n              <p>Precipitation: {period.probabilityOfPrecipitation.value}%</p>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACO,SAAS,EAAEC,YAAY,CAAC,GAAGR,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACS,SAAS,EAAEC,YAAY,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACW,OAAO,EAAEC,UAAU,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC;IAAEe,IAAI,EAAE,EAAE;IAAEC,MAAM,EAAE;EAAG,CAAC,CAAC;EACpE,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC;IAAEe,IAAI,EAAE,EAAE;IAAEC,MAAM,EAAE;EAAG,CAAC,CAAC;EAChE,MAAM,CAACG,WAAW,EAAEC,cAAc,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC;EACpD,MAAM,CAACqB,YAAY,EAAEC,eAAe,CAAC,GAAGtB,QAAQ,CAAC,IAAI,CAAC;EACtD,MAAM,CAACuB,KAAK,EAAEC,QAAQ,CAAC,GAAGxB,QAAQ,CAAC,EAAE,CAAC;;EAEtC;EACA,MAAMyB,UAAU,GAAIC,OAAO,IAAK;IAC9B,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAACF,OAAO,CAAC;IAC9B,OAAOC,IAAI,CAACE,WAAW,CAAC,CAAC,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;EACzC,CAAC;;EAED;EACA,MAAMC,yBAAyB,GAAIC,OAAO,IAAK;IAC7C,IAAI;MAAEjB,IAAI;MAAEC;IAAO,CAAC,GAAGgB,OAAO;IAC9BjB,IAAI,GAAGkB,QAAQ,CAAClB,IAAI,CAAC;IAErB,IAAIC,MAAM,KAAK,IAAI,IAAID,IAAI,KAAK,EAAE,EAAE;MAClCA,IAAI,IAAI,EAAE;IACZ,CAAC,MAAM,IAAIC,MAAM,KAAK,IAAI,IAAID,IAAI,KAAK,EAAE,EAAE;MACzCA,IAAI,GAAG,CAAC;IACV;;IAEA;EACF,CAAC;;EAGA;EACA,MAAMmB,UAAU,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;EACpE,MAAMC,aAAa,GAAGC,KAAK,CAACC,IAAI,CAAC;IAAEC,MAAM,EAAE;EAAE,CAAC,EAAE,CAACC,CAAC,EAAEC,KAAK,KAAK;IAC7D,MAAMC,KAAK,GAAG,IAAIb,IAAI,CAAC,CAAC;IACvB,MAAMD,IAAI,GAAG,IAAIC,IAAI,CAACa,KAAK,CAAC;IAC5Bd,IAAI,CAACe,OAAO,CAACf,IAAI,CAACgB,OAAO,CAAC,CAAC,GAAGH,KAAK,CAAC;IACpC,MAAMI,SAAS,GAAGV,UAAU,CAACP,IAAI,CAACkB,MAAM,CAAC,CAAC,CAAC;IAC3C,MAAMC,KAAK,GAAGnB,IAAI,CAACoB,cAAc,CAAC,OAAO,EAAE;MAAED,KAAK,EAAE;IAAQ,CAAC,CAAC;IAC9D,MAAME,GAAG,GAAGrB,IAAI,CAACgB,OAAO,CAAC,CAAC;IAC1B,MAAMM,IAAI,GAAGtB,IAAI,CAACuB,WAAW,CAAC,CAAC;IAC/B,OAAQ,GAAEN,SAAU,IAAGE,KAAM,IAAGE,GAAI,KAAIC,IAAK,EAAC;EAChD,CAAC,CAAC;;EAEA;EACD,MAAME,KAAK,GAAGf,KAAK,CAACC,IAAI,CAAC;IAAEC,MAAM,EAAE;EAAG,CAAC,EAAE,CAACC,CAAC,EAAEa,CAAC,KAAKA,CAAC,GAAG,CAAC,CAAC;EACzD,MAAMC,OAAO,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC;EAG9B,MAAMC,YAAY,GAAG,MAAOC,CAAC,IAAK;IAChCA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,MAAMC,GAAG,GAAGC,UAAU,CAACrD,QAAQ,CAAC;IAChC,MAAMsD,IAAI,GAAGD,UAAU,CAACnD,SAAS,CAAC;IAElC,IAAI,CAACF,QAAQ,IAAI,CAACE,SAAS,EAAE;MAC3BiB,QAAQ,CAAC,qCAAqC,CAAC;MAC/C;IACF;IAEAA,QAAQ,CAAC,EAAE,CAAC;IAEZ,MAAMoC,GAAG,GAAI,kCAAiCH,GAAI,IAAGE,IAAK,EAAC;IAE3D,IAAI;MACF;MACA,MAAME,QAAQ,GAAG,MAAMC,KAAK,CAACF,GAAG,CAAC;MACjCG,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEH,QAAQ,CAAC;MACjC,IAAI,CAACA,QAAQ,CAACI,EAAE,EAAE;QAChB,MAAMC,SAAS,GAAG,MAAML,QAAQ,CAACM,IAAI,CAAC,CAAC;QACvC,MAAM,IAAIC,KAAK,CAAE,SAAQF,SAAS,CAACG,MAAO,KAAIH,SAAS,CAACI,MAAO,EAAC,IAAK,UAAST,QAAQ,CAACQ,MAAO,EAAC,CAAC;MAClG;MACA,MAAME,IAAI,GAAG,MAAMV,QAAQ,CAACM,IAAI,CAAC,CAAC;MAClC,MAAMK,iBAAiB,GAAGD,IAAI,CAACE,UAAU,CAACC,cAAc;;MAExD;MACA,MAAMC,gBAAgB,GAAG,MAAMb,KAAK,CAACU,iBAAiB,CAAC;MACvDT,OAAO,CAACC,GAAG,CAAC,UAAU,EAAEW,gBAAgB,CAAC;MACzC,IAAI,CAACA,gBAAgB,CAACV,EAAE,EAAE;QACxB,MAAMC,SAAS,GAAG,MAAMS,gBAAgB,CAACR,IAAI,CAAC,CAAC;QAC/C,MAAM,IAAIC,KAAK,CAAE,SAAQF,SAAS,CAACG,MAAO,KAAIH,SAAS,CAACI,MAAO,EAAC,IAAK,UAASK,gBAAgB,CAACN,MAAO,EAAC,CAAC;MAC1G;MAEA,MAAMO,YAAY,GAAG,MAAMD,gBAAgB,CAACR,IAAI,CAAC,CAAC;MAClD/C,cAAc,CAACwD,YAAY,CAAC;;MAE7B;MACA,MAAMC,aAAa,GAAI,GAAEpD,UAAU,CAAChB,SAAS,CAAE,IAAGsB,yBAAyB,CAAClB,SAAS,CAAE,EAAC;MACxF,MAAMiE,WAAW,GAAI,GAAErD,UAAU,CAACd,OAAO,CAAE,IAAGoB,yBAAyB,CAACd,OAAO,CAAE,EAAC;MAElF8C,OAAO,CAACC,GAAG,CAACc,WAAW,CAAC;;MAExB;MACA,MAAMC,eAAe,GAAGH,YAAY,CAACH,UAAU,CAACpB,OAAO,CAAC2B,MAAM,CAAChE,MAAM,IAAI;QACtE,MAAMiE,eAAe,GAAGjE,MAAM,CAACH,SAAS;QACxC,OAAQoE,eAAe,IAAIJ,aAAa,IAAII,eAAe,GAAGH,WAAW;MAC5E,CAAC,CAAC;MAEFxD,eAAe,CAACyD,eAAe,CAAC;IAEjC,CAAC,CAAC,OAAOxD,KAAK,EAAE;MACdwC,OAAO,CAACC,GAAG,CAACzC,KAAK,CAAC;MAClBC,QAAQ,CAACD,KAAK,CAAC2D,OAAO,CAAC;MACvB9D,cAAc,CAAC,IAAI,CAAC;IACtB;EACF,CAAC;EAED2C,OAAO,CAACC,GAAG,CAAC3C,YAAY,CAAC;EACzB0C,OAAO,CAACC,GAAG,CAAC,MAAM,EAAEnD,SAAS,CAAC;EAC9BkD,OAAO,CAACC,GAAG,CAACjC,yBAAyB,CAACd,OAAO,CAAC,CAAC;EAG/C,oBACEf,OAAA;IAAKiF,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClBlF,OAAA;MAAAkF,QAAA,EAAI;IAAsB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC/BtF,OAAA;MAAAkF,QAAA,EAAI;IAA0B;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnCtF,OAAA;MAAMuF,QAAQ,EAAEnC,YAAa;MAAA8B,QAAA,gBAC3BlF,OAAA;QAAAkF,QAAA,eACElF,OAAA;UAAAkF,QAAA,GAAO,WAEL,eAAAlF,OAAA;YACEwF,IAAI,EAAC,MAAM;YACXC,KAAK,EAAEtF,QAAS;YAChBuF,QAAQ,EAAGrC,CAAC,IAAKjD,WAAW,CAACiD,CAAC,CAACsC,MAAM,CAACF,KAAK,CAAE;YAC7CG,WAAW,EAAC;UAAe;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC5B,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eACNtF,OAAA;QAAAkF,QAAA,eACElF,OAAA;UAAAkF,QAAA,GAAO,YAEL,eAAAlF,OAAA;YACEwF,IAAI,EAAC,MAAM;YACXC,KAAK,EAAEpF,SAAU;YACjBqF,QAAQ,EAAGrC,CAAC,IAAK/C,YAAY,CAAC+C,CAAC,CAACsC,MAAM,CAACF,KAAK,CAAE;YAC9CG,WAAW,EAAC;UAAiB;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC9B,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACG;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,eACNtF,OAAA;QAAO6F,OAAO,EAAC,WAAW;QAAAX,QAAA,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAChDtF,OAAA;QAAQ8F,EAAE,EAAC,WAAW;QAACL,KAAK,EAAElF,SAAU;QAACmF,QAAQ,EAAGrC,CAAC,IAAK7C,YAAY,CAAC6C,CAAC,CAACsC,MAAM,CAACF,KAAK,CAAE;QAAAP,QAAA,gBACvFlF,OAAA;UAAQyF,KAAK,EAAC,EAAE;UAACM,QAAQ;UAAAb,QAAA,EAAC;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EAC1CrD,aAAa,CAAC+D,GAAG,CAAC,CAACvE,IAAI,EAAEa,KAAK,kBAC7BtC,OAAA;UAAoByF,KAAK,EAAEhE,IAAK;UAAAyD,QAAA,EAAEzD;QAAI,GAAzBa,KAAK;UAAA6C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAA6B,CAChD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC,eACTtF,OAAA;QAAO6F,OAAO,EAAC,SAAS;QAAAX,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC1CtF,OAAA;QAAQ8F,EAAE,EAAC,SAAS;QAACL,KAAK,EAAEhF,OAAQ;QAACiF,QAAQ,EAAGrC,CAAC,IAAK3C,UAAU,CAAC2C,CAAC,CAACsC,MAAM,CAACF,KAAK,CAAE;QAAAP,QAAA,gBACjFlF,OAAA;UAAQyF,KAAK,EAAC,EAAE;UAACM,QAAQ;UAAAb,QAAA,EAAC;QAAU;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EAC1CrD,aAAa,CAAC+D,GAAG,CAAC,CAACvE,IAAI,EAAEa,KAAK,kBAC7BtC,OAAA;UAAoByF,KAAK,EAAEhE,IAAK;UAAAyD,QAAA,EAAEzD;QAAI,GAAzBa,KAAK;UAAA6C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAA6B,CAChD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC,eACTtF,OAAA;QAAO6F,OAAO,EAAC,eAAe;QAAAX,QAAA,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAClDtF,OAAA;QAAQ8F,EAAE,EAAC,eAAe;QAACL,KAAK,EAAE9E,SAAS,CAACE,IAAK;QAAC6E,QAAQ,EAAGrC,CAAC,IAAKzC,YAAY,CAAC;UAAE,GAAGD,SAAS;UAAEE,IAAI,EAAEwC,CAAC,CAACsC,MAAM,CAACF;QAAM,CAAC,CAAE;QAAAP,QAAA,gBACtHlF,OAAA;UAAQyF,KAAK,EAAC,EAAE;UAACM,QAAQ;UAAAb,QAAA,EAAC;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EAC7CrC,KAAK,CAAC+C,GAAG,CAAC,CAACnF,IAAI,EAAEyB,KAAK,kBACrBtC,OAAA;UAAoByF,KAAK,EAAE5E,IAAK;UAAAqE,QAAA,EAAErE;QAAI,GAAzByB,KAAK;UAAA6C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAA6B,CAChD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC,eACTtF,OAAA;QAAQ8F,EAAE,EAAC,iBAAiB;QAACL,KAAK,EAAE9E,SAAS,CAACG,MAAO;QAAC4E,QAAQ,EAAGrC,CAAC,IAAKzC,YAAY,CAAC;UAAE,GAAGD,SAAS;UAAEG,MAAM,EAAEuC,CAAC,CAACsC,MAAM,CAACF;QAAM,CAAC,CAAE;QAAAP,QAAA,gBAC5HlF,OAAA;UAAQyF,KAAK,EAAC,EAAE;UAACM,QAAQ;UAAAb,QAAA,EAAC;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EAC/CnC,OAAO,CAAC6C,GAAG,CAAC,CAAClF,MAAM,EAAEwB,KAAK,kBACzBtC,OAAA;UAAoByF,KAAK,EAAE3E,MAAO;UAAAoE,QAAA,EAAEpE;QAAM,GAA7BwB,KAAK;UAAA6C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAiC,CACpD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC,eAETtF,OAAA;QAAO6F,OAAO,EAAC,aAAa;QAAAX,QAAA,EAAC;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC9CtF,OAAA;QAAQ8F,EAAE,EAAC,aAAa;QAACL,KAAK,EAAE1E,OAAO,CAACF,IAAK;QAAC6E,QAAQ,EAAGrC,CAAC,IAAKrC,UAAU,CAAC;UAAE,GAAGD,OAAO;UAAEF,IAAI,EAAEwC,CAAC,CAACsC,MAAM,CAACF;QAAM,CAAC,CAAE;QAAAP,QAAA,gBAC9GlF,OAAA;UAAQyF,KAAK,EAAC,EAAE;UAACM,QAAQ;UAAAb,QAAA,EAAC;QAAW;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EAC7CrC,KAAK,CAAC+C,GAAG,CAAC,CAACnF,IAAI,EAAEyB,KAAK,kBACrBtC,OAAA;UAAoByF,KAAK,EAAE5E,IAAK;UAAAqE,QAAA,EAAErE;QAAI,GAAzByB,KAAK;UAAA6C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAA6B,CAChD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC,eACTtF,OAAA;QAAQ8F,EAAE,EAAC,eAAe;QAACL,KAAK,EAAE1E,OAAO,CAACD,MAAO;QAAC4E,QAAQ,EAAGrC,CAAC,IAAKrC,UAAU,CAAC;UAAE,GAAGD,OAAO;UAAED,MAAM,EAAEuC,CAAC,CAACsC,MAAM,CAACF;QAAM,CAAC,CAAE;QAAAP,QAAA,gBACpHlF,OAAA;UAAQyF,KAAK,EAAC,EAAE;UAACM,QAAQ;UAAAb,QAAA,EAAC;QAAa;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EAC/CnC,OAAO,CAAC6C,GAAG,CAAC,CAAClF,MAAM,EAAEwB,KAAK,kBACzBtC,OAAA;UAAoByF,KAAK,EAAE3E,MAAO;UAAAoE,QAAA,EAAEpE;QAAM,GAA7BwB,KAAK;UAAA6C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAiC,CACpD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC,eACPtF,OAAA;QAAQwF,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjC,CAAC,EACNjE,KAAK,iBAAIrB,OAAA;MAAGiG,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAhB,QAAA,EAAE7D;IAAK;MAAA8D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAChDrE,WAAW,iBACVjB,OAAA;MAAAkF,QAAA,gBACElF,OAAA;QAAAkF,QAAA,EAAI;MAAY;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACpBnE,YAAY,CAAC6E,GAAG,CAAC,CAAClF,MAAM,EAAEwB,KAAK,kBAC9BtC,OAAA;QAAiBiF,SAAS,EAAC,mBAAmB;QAAAC,QAAA,gBAC5ClF,OAAA;UAAAkF,QAAA,GAAI,eAAa,EAAC,IAAIxD,IAAI,CAACZ,MAAM,CAACH,SAAS,CAAC,CAACkC,cAAc,CAAC,OAAO,EAAE;YAAEsD,OAAO,EAAE,OAAO;YAAEvD,KAAK,EAAE,OAAO;YAAEE,GAAG,EAAE,SAAS;YAAEC,IAAI,EAAE,SAAS;YAAElC,IAAI,EAAE,SAAS;YAAEuF,MAAM,EAAE,SAAS;YAAEC,MAAM,EAAE;UAAK,CAAC,CAAC;QAAA;UAAAlB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eACnMtF,OAAA;UAAAkF,QAAA,GAAI,YAAU,EAAC,IAAIxD,IAAI,CAACZ,MAAM,CAACC,OAAO,CAAC,CAAC8B,cAAc,CAAC,OAAO,EAAE;YAAEsD,OAAO,EAAE,OAAO;YAAEvD,KAAK,EAAE,OAAO;YAAEE,GAAG,EAAE,SAAS;YAAEC,IAAI,EAAE,SAAS;YAAElC,IAAI,EAAE,SAAS;YAAEuF,MAAM,EAAE,SAAS;YAAEC,MAAM,EAAE;UAAK,CAAC,CAAC;QAAA;UAAAlB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,eAC9LtF,OAAA;UAAAkF,QAAA,GAAG,eAAa,EAACpE,MAAM,CAACwF,WAAW,EAAC,OAAM,EAACxF,MAAM,CAACyF,eAAe;QAAA;UAAApB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eACtEtF,OAAA;UAAAkF,QAAA,EAAIpE,MAAM,CAAC0F;QAAa;UAAArB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC7BtF,OAAA;UAAAkF,QAAA,GAAG,iBAAe,EAACpE,MAAM,CAAC2F,0BAA0B,CAAChB,KAAK,EAAC,GAAC;QAAA;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC;MAAA,GALxDhD,KAAK;QAAA6C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAMV,CACN,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV;AAACpF,EAAA,CAxMQD,GAAG;AAAAyG,EAAA,GAAHzG,GAAG;AA0MZ,eAAeA,GAAG;AAAC,IAAAyG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}