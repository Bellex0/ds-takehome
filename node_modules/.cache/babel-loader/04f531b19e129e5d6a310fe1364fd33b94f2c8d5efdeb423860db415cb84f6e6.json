{"ast":null,"code":"var _jsxFileName = \"/Users/belle/Desktop/data-society/data-society-take-home/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [latitude, setLatitude] = useState('');\n  const [longitude, setLongitude] = useState('');\n  const [weatherData, setWeatherData] = useState(null);\n  const [filteredData, setFilteredData] = useState(null);\n  // const [hourlyForecastURL, setHourlyForecastURL] = useState('');\n  // const [hourlyData, setHourlyData] = useState(null);\n  const [error, setError] = useState('');\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [startTime, setStartTime] = useState({\n    hour: '',\n    period: ''\n  });\n  const [endTime, setEndTime] = useState({\n    hour: '',\n    period: ''\n  });\n  // const today = new Date();\n\n  const formatDate = dateStr => {\n    const date = new Date(dateStr);\n    return date.toISOString().split('T')[0]; // \"YYYY-MM-DD\"\n  };\n  const formatTime = timeStr => {\n    const [time, period] = timeStr.split(' ');\n    let [hours, minutes] = time.split(':');\n    minutes = minutes || '00';\n    if (period.toLowerCase() === 'pm' && hours !== '12') {\n      hours = (parseInt(hours) + 12).toString();\n    } else if (period.toLowerCase() === 'am' && hours === '12') {\n      hours = '00';\n    }\n    return `${hours}:${minutes}:00`; // \"HH:MM:SS\"\n  };\n  const convertTimeTo24HourFormat = timeObj => {\n    let {\n      hour,\n      period\n    } = timeObj;\n    hour = parseInt(hour);\n    if (period === 'PM' && hour !== 12) {\n      hour += 12;\n    } else if (period === 'AM' && hour === 12) {\n      hour = 0;\n    }\n    return `${hour.toString().padStart(2, '0')}:00:00-05:00`;\n  };\n\n  // Function to generate dates for the next seven days\n  const daysOfWeek = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n  const nextSevenDays = Array.from({\n    length: 7\n  }, (_, index) => {\n    const today = new Date();\n    const date = new Date(today);\n    date.setDate(date.getDate() + index);\n    const dayOfWeek = daysOfWeek[date.getDay()];\n    const month = date.toLocaleString('en-US', {\n      month: 'short'\n    });\n    const day = date.getDate();\n    const year = date.getFullYear();\n    return `${dayOfWeek} ${month} ${day}, ${year}`;\n  });\n\n  // Arrays for hours and AM/PM\n  const hours = Array.from({\n    length: 12\n  }, (_, i) => i + 1);\n  const periods = ['AM', 'PM'];\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const lat = parseFloat(latitude);\n    const long = parseFloat(longitude);\n    if (!latitude || !longitude) {\n      setError('Please enter latitude and longitude');\n      return;\n    }\n    setError('');\n    const url = `https://api.weather.gov/points/${lat},${long}`;\n    try {\n      const response = await fetch(url);\n      console.log(\"response\", response);\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(`Error ${errorData.status}: ${errorData.detail}` || `Error: ${response.status}`);\n      }\n      const data = await response.json();\n      const forecastHourlyURL = data.properties.forecastHourly;\n\n      // 2ND API CALL TO GET HOURLY FORECAST\n      const forecastResponse = await fetch(forecastHourlyURL);\n      console.log(\"forecast\", forecastResponse);\n      if (!forecastResponse.ok) {\n        const errorData = await forecastResponse.json();\n        throw new Error(`Error ${errorData.status}: ${errorData.detail}` || `Error: ${forecastResponse.status}`);\n      }\n      const forecastData = await forecastResponse.json();\n      setWeatherData(forecastData);\n\n      // Convert user input dates and times\n      const startDateTime = `${formatDate(startDate)}T${convertTimeTo24HourFormat(startTime)}`;\n      const endDateTime = `${formatDate(endDate)}T${convertTimeTo24HourFormat(endTime)}`;\n      console.log(endDateTime);\n\n      //  const filteredPeriods = forecastData.properties.periods.filter(period => {\n      //      const periodStartTime = period.startTime;\n      //    const periodEndTime = period.endTime;\n      //    return (periodStartTime >= startDateTime && periodEndTime <= endDateTime);\n      //   });\n\n      // Filter data based on user inputs\n      const filteredPeriods = forecastData.properties.periods.filter(period => {\n        const periodStartTime = new Date(period.startTime);\n        const periodEndTime = new Date(period.endTime);\n        return periodStartTime < endDateTime && periodEndTime > startDateTime;\n      });\n      setFilteredData(filteredPeriods);\n    } catch (error) {\n      console.log(error);\n      setError(error.message);\n      setWeatherData(null);\n    }\n  };\n\n  // console.log(formatDate(startDate))\n  // console.log(convertTimeTo24HourFormat(startTime))\n  console.log(filteredData);\n\n  // const getHourlyWeather = async () => {\n  //   console.log(hourlyForecastURL)\n  //   try {\n  //     const response = await fetch(hourlyForecastURL);\n  //     console.log(\"response2\", response)\n  //     if (!response.ok) {\n  //       const errorData = await response.json();\n  //       throw new Error(`Error ${errorData.status}: ${errorData.detail}` || `Error: ${response.status}`);\n  //     }\n\n  //     const data = await response.json();\n  //     setWeatherData(data);\n\n  //   } catch (error) {\n  //     console.log(error)\n  //     setError(error.message);\n  //     setWeatherData(null);\n  //   }\n  // }\n\n  function formatDateString(inputDateStr) {\n    // Parse the date string into a Date object\n    const parsedDate = new Date(inputDateStr);\n\n    // Extract the month, day, and year\n    const month = parsedDate.getMonth() + 1; // Months are zero-indexed, so add 1\n    const day = parsedDate.getDate();\n    const year = parsedDate.getFullYear();\n\n    // Format the date as \"M/D/YYYY\"\n    return `${month}/${day}/${year}`;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"How's the weather?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Enter location coordinates\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Latitude:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: latitude,\n            onChange: e => setLatitude(e.target.value),\n            placeholder: \"e.g., 36.1716\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"label\", {\n          children: [\"Longitude:\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            value: longitude,\n            onChange: e => setLongitude(e.target.value),\n            placeholder: \"e.g., -115.1391\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"startDate\",\n        children: \"Start Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"startDate\",\n        value: startDate,\n        onChange: e => setStartDate(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          children: \"Select day\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 207,\n          columnNumber: 7\n        }, this), nextSevenDays.map((date, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: date,\n          children: date\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"endDate\",\n        children: \"End Date:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"endDate\",\n        value: endDate,\n        onChange: e => setEndDate(e.target.value),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          children: \"Select day\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 7\n        }, this), nextSevenDays.map((date, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: date,\n          children: date\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 11\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"startTimeHour\",\n        children: \"Start Time:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 219,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"startTimeHour\",\n        value: startTime.hour,\n        onChange: e => setStartTime({\n          ...startTime,\n          hour: e.target.value\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          children: \"Select hour\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 221,\n          columnNumber: 9\n        }, this), hours.map((hour, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: hour,\n          children: hour\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 11\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 220,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"startTimePeriod\",\n        value: startTime.period,\n        onChange: e => setStartTime({\n          ...startTime,\n          period: e.target.value\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          children: \"Select period\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 9\n        }, this), periods.map((period, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: period,\n          children: period\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 11\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        htmlFor: \"endTimeHour\",\n        children: \"End Time:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"endTimeHour\",\n        value: endTime.hour,\n        onChange: e => setEndTime({\n          ...endTime,\n          hour: e.target.value\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          children: \"Select hour\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 235,\n          columnNumber: 9\n        }, this), hours.map((hour, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: hour,\n          children: hour\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 234,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        id: \"endTimePeriod\",\n        value: endTime.period,\n        onChange: e => setEndTime({\n          ...endTime,\n          period: e.target.value\n        }),\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          value: \"\",\n          disabled: true,\n          children: \"Select period\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 241,\n          columnNumber: 9\n        }, this), periods.map((period, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: period,\n          children: period\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 243,\n          columnNumber: 11\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 240,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 246,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: 'red'\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 17\n    }, this), weatherData && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Weather Data\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 251,\n        columnNumber: 11\n      }, this), filteredData.map((period, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Start Time: \", period.startTime]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 255,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"End Time: \", period.endTime]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Temperature: \", period.temperature, \" \", period.temperatureUnit]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Precipitation: \", period.probabilityOfPrecipitation.value, \" \", period.probabilityOfPrecipitation.unitCode]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 258,\n          columnNumber: 15\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 179,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"fSpIab7EKwneJVAYbY5CHor1mCA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","App","_s","latitude","setLatitude","longitude","setLongitude","weatherData","setWeatherData","filteredData","setFilteredData","error","setError","startDate","setStartDate","endDate","setEndDate","startTime","setStartTime","hour","period","endTime","setEndTime","formatDate","dateStr","date","Date","toISOString","split","formatTime","timeStr","time","hours","minutes","toLowerCase","parseInt","toString","convertTimeTo24HourFormat","timeObj","padStart","daysOfWeek","nextSevenDays","Array","from","length","_","index","today","setDate","getDate","dayOfWeek","getDay","month","toLocaleString","day","year","getFullYear","i","periods","handleSubmit","e","preventDefault","lat","parseFloat","long","url","response","fetch","console","log","ok","errorData","json","Error","status","detail","data","forecastHourlyURL","properties","forecastHourly","forecastResponse","forecastData","startDateTime","endDateTime","filteredPeriods","filter","periodStartTime","periodEndTime","message","formatDateString","inputDateStr","parsedDate","getMonth","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","placeholder","htmlFor","id","disabled","map","style","color","temperature","temperatureUnit","probabilityOfPrecipitation","unitCode","_c","$RefreshReg$"],"sources":["/Users/belle/Desktop/data-society/data-society-take-home/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [latitude, setLatitude] = useState('');\n  const [longitude, setLongitude] = useState('');\n  const [weatherData, setWeatherData] = useState(null);\n  const [filteredData, setFilteredData] = useState(null);\n  // const [hourlyForecastURL, setHourlyForecastURL] = useState('');\n  // const [hourlyData, setHourlyData] = useState(null);\n  const [error, setError] = useState('');\n  const [startDate, setStartDate] = useState('');\n  const [endDate, setEndDate] = useState('');\n  const [startTime, setStartTime] = useState({ hour: '', period: '' });\n  const [endTime, setEndTime] = useState({ hour: '', period: '' });\n  // const today = new Date();\n\n \n\n  const formatDate = (dateStr) => {\n    const date = new Date(dateStr);\n    return date.toISOString().split('T')[0]; // \"YYYY-MM-DD\"\n  };\n\n  const formatTime = (timeStr) => {\n    const [time, period] = timeStr.split(' ');\n    let [hours, minutes] = time.split(':');\n    minutes = minutes || '00';\n\n    if (period.toLowerCase() === 'pm' && hours !== '12') {\n      hours = (parseInt(hours) + 12).toString();\n    } else if (period.toLowerCase() === 'am' && hours === '12') {\n      hours = '00';\n    }\n\n    return `${hours}:${minutes}:00`; // \"HH:MM:SS\"\n  };\n\n  const convertTimeTo24HourFormat = (timeObj) => {\n    let { hour, period } = timeObj;\n    hour = parseInt(hour);\n  \n    if (period === 'PM' && hour !== 12) {\n      hour += 12;\n    } else if (period === 'AM' && hour === 12) {\n      hour = 0;\n    }\n  \n    return `${hour.toString().padStart(2, '0')}:00:00-05:00`;\n  };\n  \n\n   // Function to generate dates for the next seven days\n   const daysOfWeek = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n   const nextSevenDays = Array.from({ length: 7 }, (_, index) => {\n    const today = new Date();\n     const date = new Date(today);\n     date.setDate(date.getDate() + index);\n     const dayOfWeek = daysOfWeek[date.getDay()];\n     const month = date.toLocaleString('en-US', { month: 'short' });\n     const day = date.getDate();\n     const year = date.getFullYear();\n     return `${dayOfWeek} ${month} ${day}, ${year}`;\n   });\n\n     // Arrays for hours and AM/PM\n    const hours = Array.from({ length: 12 }, (_, i) => i + 1);\n    const periods = ['AM', 'PM'];\n\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n\n    const lat = parseFloat(latitude);\n    const long = parseFloat(longitude);\n\n    if (!latitude || !longitude) {\n      setError('Please enter latitude and longitude');\n      return;\n    }\n\n    setError('');\n\n    const url = `https://api.weather.gov/points/${lat},${long}`;\n\n    try {\n      const response = await fetch(url);\n      console.log(\"response\", response)\n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(`Error ${errorData.status}: ${errorData.detail}` || `Error: ${response.status}`);\n      }\n\n      const data = await response.json();\n      const forecastHourlyURL = data.properties.forecastHourly;\n\n      // 2ND API CALL TO GET HOURLY FORECAST\n      const forecastResponse = await fetch(forecastHourlyURL)\n      console.log(\"forecast\", forecastResponse)\n      if (!forecastResponse.ok) {\n        const errorData = await forecastResponse.json();\n        throw new Error(`Error ${errorData.status}: ${errorData.detail}` || `Error: ${forecastResponse.status}`);\n      }\n\n      const forecastData = await forecastResponse.json();\n      setWeatherData(forecastData);\n\n     // Convert user input dates and times\n     const startDateTime = `${formatDate(startDate)}T${convertTimeTo24HourFormat(startTime)}`;\n     const endDateTime = `${formatDate(endDate)}T${convertTimeTo24HourFormat(endTime)}`;\n\n     console.log(endDateTime)\n\n     \n    //  const filteredPeriods = forecastData.properties.periods.filter(period => {\n    //      const periodStartTime = period.startTime;\n    //    const periodEndTime = period.endTime;\n    //    return (periodStartTime >= startDateTime && periodEndTime <= endDateTime);\n    //   });\n\n           // Filter data based on user inputs\n           const filteredPeriods = forecastData.properties.periods.filter(period => {\n            const periodStartTime = new Date(period.startTime);\n            const periodEndTime = new Date(period.endTime);\n            return (periodStartTime < endDateTime && periodEndTime > startDateTime);\n          });\n      \n      setFilteredData(filteredPeriods);\n      \n      \n    } catch (error) {\n      console.log(error)\n      setError(error.message);\n      setWeatherData(null);\n    }\n  };\n\n  // console.log(formatDate(startDate))\n  // console.log(convertTimeTo24HourFormat(startTime))\n  console.log(filteredData)\n\n\n\n  // const getHourlyWeather = async () => {\n  //   console.log(hourlyForecastURL)\n  //   try {\n  //     const response = await fetch(hourlyForecastURL);\n  //     console.log(\"response2\", response)\n  //     if (!response.ok) {\n  //       const errorData = await response.json();\n  //       throw new Error(`Error ${errorData.status}: ${errorData.detail}` || `Error: ${response.status}`);\n  //     }\n\n  //     const data = await response.json();\n  //     setWeatherData(data);\n      \n  //   } catch (error) {\n  //     console.log(error)\n  //     setError(error.message);\n  //     setWeatherData(null);\n  //   }\n  // }\n\n  function formatDateString(inputDateStr) {\n    // Parse the date string into a Date object\n    const parsedDate = new Date(inputDateStr);\n  \n    // Extract the month, day, and year\n    const month = parsedDate.getMonth() + 1; // Months are zero-indexed, so add 1\n    const day = parsedDate.getDate();\n    const year = parsedDate.getFullYear();\n  \n    // Format the date as \"M/D/YYYY\"\n    return `${month}/${day}/${year}`;\n  }\n\n\n  return (\n    <div className=\"App\">\n      <h1>How's the weather?</h1>\n      <h3>Enter location coordinates</h3>\n      <form onSubmit={handleSubmit}>\n        <div>\n          <label>\n            Latitude:\n            <input\n              type=\"text\"\n              value={latitude}\n              onChange={(e) => setLatitude(e.target.value)}\n              placeholder=\"e.g., 36.1716\"\n            />\n          </label>\n        </div>\n        <div>\n          <label>\n            Longitude:\n            <input\n              type=\"text\"\n              value={longitude}\n              onChange={(e) => setLongitude(e.target.value)}\n              placeholder=\"e.g., -115.1391\"\n            />\n          </label>\n        </div>\n        <label htmlFor=\"startDate\">Start Date:</label>\n      <select id=\"startDate\" value={startDate} onChange={(e) => setStartDate(e.target.value)}>\n      <option value=\"\" disabled>Select day</option>\n        {nextSevenDays.map((date, index) => (\n          <option key={index} value={date}>{date}</option>\n        ))}\n      </select>\n      <label htmlFor=\"endDate\">End Date:</label>\n      <select id=\"endDate\" value={endDate} onChange={(e) => setEndDate(e.target.value)}>\n      <option value=\"\" disabled>Select day</option>\n        {nextSevenDays.map((date, index) => (\n          <option key={index} value={date}>{date}</option>\n        ))}\n      </select>\n      <label htmlFor=\"startTimeHour\">Start Time:</label>\n      <select id=\"startTimeHour\" value={startTime.hour} onChange={(e) => setStartTime({ ...startTime, hour: e.target.value })}>\n        <option value=\"\" disabled>Select hour</option>\n        {hours.map((hour, index) => (\n          <option key={index} value={hour}>{hour}</option>\n        ))}\n      </select>\n      <select id=\"startTimePeriod\" value={startTime.period} onChange={(e) => setStartTime({ ...startTime, period: e.target.value })}>\n        <option value=\"\" disabled>Select period</option>\n        {periods.map((period, index) => (\n          <option key={index} value={period}>{period}</option>\n        ))}\n      </select>\n\n      <label htmlFor=\"endTimeHour\">End Time:</label>\n      <select id=\"endTimeHour\" value={endTime.hour} onChange={(e) => setEndTime({ ...endTime, hour: e.target.value })}>\n        <option value=\"\" disabled>Select hour</option>\n        {hours.map((hour, index) => (\n          <option key={index} value={hour}>{hour}</option>\n        ))}\n      </select>\n      <select id=\"endTimePeriod\" value={endTime.period} onChange={(e) => setEndTime({ ...endTime, period: e.target.value })}>\n        <option value=\"\" disabled>Select period</option>\n        {periods.map((period, index) => (\n          <option key={index} value={period}>{period}</option>\n        ))}\n      </select>\n        <button type=\"submit\">Submit</button>\n      </form>\n      {error && <p style={{ color: 'red' }}>{error}</p>}\n      {weatherData && (\n        <div>\n          <h2>Weather Data</h2>\n          {/* <pre>{JSON.stringify(weatherData, null, 2)}</pre> */}\n          {filteredData.map((period, index) => (\n            <div key={index}>\n              <p>Start Time: {period.startTime}</p>\n              <p>End Time: {period.endTime}</p>\n              <p>Temperature: {period.temperature} {period.temperatureUnit}</p>\n              <p>Precipitation: {period.probabilityOfPrecipitation.value} {period.probabilityOfPrecipitation.unitCode}</p>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}